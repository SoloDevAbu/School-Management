services:
  # Next.js Production Server
  nextjs-prod:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nextjs-prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-password}@postgres-prod:5432/${POSTGRES_DB:-nextjs_prod}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    depends_on:
      postgres-prod:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - nextjs-network

  # PostgreSQL Database for Production
  postgres-prod:
    image: postgres:15-alpine
    container_name: postgres-prod
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-nextjs_prod}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - nextjs-network

volumes:
  postgres_prod_data:
    driver: local

networks:
  nextjs-network:
    driver: bridge