services:
  # Next.js Development Server
  nextjs-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: nextjs-dev
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for hot reload
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres-dev:5432/nextjs_dev
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=development-secret-key-must-be-at-least-32-characters-long
    depends_on:
      postgres-dev:
        condition: service_healthy
    networks:
      - nextjs-network

  # PostgreSQL Database for Development
  postgres-dev:
    image: postgres:15-alpine
    container_name: postgres-dev
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: nextjs_dev
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - nextjs-network

  # pgAdmin for Database Management (Optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-dev
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - nextjs-network

volumes:
  postgres_dev_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  nextjs-network:
    driver: bridge